Setting up Statsd
=================

1. Install Docker.

2. Grab the docker statsd/grafana/graphite container:

   docker pull hopsoft/graphite-statsd

3. Start the container, with the right port mappings:

   docker run -d --name graphite -p 80:80 -p 2003:2003 -p 8125:8125/udp hopsoft/graphite-statsd

4. On Mac OS X, figure out your Docker network interface:

   boot2docker ip

5. Go to http://URL to view the Graphite graphs

6. Log in as root/root to save graphs.

7. Easiest way is to create a dashboard with some graphs.
   The key is to look at the stats_counts namespace for absolute values of the increments.

8. Need AMQP backend for statsd:

   https://github.com/etsy/statsd/wiki/Backends

Creating Data
============

(webapp in the web repo)

1. Configure the web app.
   - in views.py, configure the stats server IP
   - in __init__.py, configure pointer to database

2. Load the schema.

   sqlite3 /tmp/kineticw.db < sql/schema.sql

3. Start the web app:

   python runserver.py

4. Stats will increment a counter on failed logins and successful logins.

5. I have a dumb program statsd_test.py which generates larger numbers
   of messages so you can see more on the graph.

   There is 10-20 seconds of latency for the graphs to update. Also,
   statsd does some sort of weird averaging behind the scenes.

   https://github.com/etsy/statsd/issues/32

   The statsd_test.py generates successful and failed logins so you
   can calculate a ratio dynamically.



Modifying the Docker container
==============================

1. docker exec -it <container id> bash


