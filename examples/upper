#!/usr/bin/env python

import logging
from argparse import ArgumentParser
from proton.reactor import Reactor
from datawire import Address, Tether, Processor, Sender

# This service uppercases all text messages and passes them along to
# the forwarding address supplied on the command line. If the message
# isn't a text message it will just pass it through unmodified.

class Upper:

    def __init__(self, args):
        svc_host = Address(args.address).host
        announce_address = "//" + (args.ann_host or args.host or svc_host) + \
                           ":" + (args.ann_port or args.port)
        self.tether = Tether(args.directory, args.address, announce_address)
        self.host = args.host or svc_host
        self.port = args.port
        self.sender = Sender(args.forward)

    def on_reactor_init(self, event):
        event.reactor.acceptor(self.host, self.port, Processor(self))
        self.tether.start(event.reactor)
        self.sender.start(event.reactor)

    def on_message(self, event):
        if hasattr(event.message.body, "upper"):
            event.message.body = event.message.body.upper()
        self.sender.send(event.message)

logging.basicConfig(level=logging.INFO)

parser = ArgumentParser(prog="upper")
parser.add_argument("-d", "--directory", help="datawire directory")
parser.add_argument("-n", "--host", help="hostName binding")
parser.add_argument("-p", "--port", default="5678", help="port binding")
parser.add_argument("--ann-host", help="announced hostname (EC2)")
parser.add_argument("--ann-port", help="announced port (EC2)")
parser.add_argument("address", help="service address")
parser.add_argument("forward", help="forwarding address")

Reactor(Upper(parser.parse_args())).run()
