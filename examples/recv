#!/usr/bin/env python

import sys, time
from argparse import ArgumentParser
from proton import Message
from proton.reactor import Reactor
from proton.handlers import CFlowController, CHandshaker
from datawire import network, Tether

class Logger:

    def on_unhandled(self, name, event):
        print name, event

class Client:

    def __init__(self, args):
        self.network = network(args.physical)
        if ":" in self.network:
            self.host, self.port = self.network.split(":", 1)
        else:
            self.host = self.network
            self.port = 5672
        self.tether = Tether(args.directory, args.address, args.physical)
        self.message = Message()
        self.handlers = [CFlowController(1024), CHandshaker()]

    def on_reactor_init(self, event):
        event.reactor.acceptor(self.host, self.port)
        self.tether.start(event.reactor)

    def on_delivery(self, event):
        if self.message.recv(event.link):
            print self.message
            event.delivery.settle()

parser = ArgumentParser(prog="recv")
parser.add_argument("-d", "--directory", default="//localhost/directory", help="datawire directory")
parser.add_argument("-p", "--physical", default="//localhost:5678", help="physical address")
parser.add_argument("address", help="amqp address")

Reactor(Client(parser.parse_args())).run()
