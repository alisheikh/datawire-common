#!/usr/bin/env python

import sys, time
from argparse import ArgumentParser
from proton import Message
from proton.reactor import Reactor
from proton.handlers import CFlowController, CHandshaker
from datawire import Address, Decoder, Tether, Receiver

class Logger:

    def on_unhandled(self, name, event):
        print name, event

class Client:

    def __init__(self, args):
        self.physical = Address.parse(args.physical)
        self.tether = Tether(args.directory, args.address, args.physical)
        self.decoder = Decoder(self)
        self.handlers = [CFlowController(1024), CHandshaker(), self.decoder]

    def on_reactor_init(self, event):
        event.reactor.acceptor(self.physical.host, self.physical.port)
        self.tether.start(event.reactor)

    def on_message(self, event):
        print event.message

parser = ArgumentParser(prog="recv")
parser.add_argument("-d", "--directory", default="//localhost/directory", help="datawire directory")
parser.add_argument("-p", "--physical", default="//localhost:5678", help="physical address")
parser.add_argument("address", help="amqp address")

Reactor(Client(parser.parse_args())).run()
