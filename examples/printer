#!/usr/bin/env python

from argparse import ArgumentParser
from proton.reactor import Reactor
from datawire import Address, Tether, Processor

class Service:

    def __init__(self, args):
        # Create a tether to the datawire directory that routes
        # connections made to args.address to args.physical
        self.tether = Tether(args.directory, args.address, args.physical)
        # parse the physical address so we can bind to the host/port later
        self.physical = Address(args.physical)

    def on_reactor_init(self, event):
        # bind to the physical host/port with an event handler that
        # delegates message processing to our on_message method
        event.reactor.acceptor(self.physical.host, self.physical.port, Processor(self))
        # start the tether *after* we've bound to the physical host/port
        self.tether.start(event.reactor)

    def on_message(self, event):
        print event.message

parser = ArgumentParser(prog="recv")
parser.add_argument("-d", "--directory", default="//localhost/directory", help="datawire directory")
parser.add_argument("-p", "--physical", default="//localhost:5678", help="physical address")
parser.add_argument("address", help="service address")

Reactor(Service(parser.parse_args())).run()
