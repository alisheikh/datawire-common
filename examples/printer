#!/usr/bin/env python

import logging
from argparse import ArgumentParser
from proton.reactor import Reactor
from datawire import Address, Tether, Processor

class Printer:

    def __init__(self, args):
        # Create a tether to the datawire directory that routes
        # connections made to args.address to args.ann_host/port
        svc_host = Address(args.address).host
        announce_address = "//" + (args.ann_host or args.host or svc_host) + \
                           ":" + (args.ann_port or args.port)
        self.tether = Tether(args.directory, args.address, announce_address)
        self.host = args.host or svc_host
        self.port = args.port

    def on_reactor_init(self, event):
        # bind to the physical host/port with an event handler that
        # delegates message processing to our on_message method
        event.reactor.acceptor(self.host, self.port, Processor(self))
        # start the tether *after* we've bound to the physical host/port
        self.tether.start(event.reactor)

    def on_message(self, event):
        print event.message

logging.basicConfig(level=logging.INFO)

parser = ArgumentParser(prog="printer")
parser.add_argument("-d", "--directory", help="datawire directory")
parser.add_argument("-n", "--host", help="hostName binding")
parser.add_argument("-p", "--port", default="5678", help="port binding")
parser.add_argument("--ann-host", help="announced hostname (EC2)")
parser.add_argument("--ann-port", help="announced port (EC2)")
parser.add_argument("address", help="service address")

Reactor(Printer(parser.parse_args())).run()
